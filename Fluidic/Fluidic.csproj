<Project Sdk="Microsoft.NET.Sdk">

    <Import Project="$([MSBuild]::GetPathOfFileAbove('Common.Release.props', '$(MSBuildThisFileDirectory)'))"/>

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <Title>Fluidic</Title>
        <Description>Zero cost compile time templating</Description>
        <PackageTags>C#, StringBuilder, Templating, Liquid</PackageTags>
        <PackageProjectUrl>https://bmazzarol.github.io/Fluidic</PackageProjectUrl>
        <RepositoryUrl>https://github.com/bmazzarol/Fluidic</RepositoryUrl>
        <PackageIcon>droplets-icon.png</PackageIcon>
        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
        <IsRoslynComponent>true</IsRoslynComponent>
        <PackageScribanIncludeSource>true</PackageScribanIncludeSource>
        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <NoWarn>RS1035;MA0037</NoWarn>
    </PropertyGroup>

    <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
    <ItemGroup>
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false"/>
    </ItemGroup>

    <ItemGroup>
        <None Include="..\droplets-icon.png" Pack="true" PackagePath="\"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" PrivateAssets="all"/>
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" PrivateAssets="all"/>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Scriban" IncludeAssets="Build"/>
        <PackageReference Include="Microsoft.CSharp"/>
    </ItemGroup>
</Project>
